<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="64" passed="56" failed="8" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-24T03:43:28Z" name="Cross Browser Test Suite" finished-at="2022-05-24T03:45:29Z" duration-ms="121419">
    <groups>
    </groups>
    <test started-at="2022-05-24T03:43:28Z" name="Chrome Browser Test" finished-at="2022-05-24T03:45:26Z" duration-ms="118721">
      <class name="executeClass.ExecuteManageProductPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:43:40Z" name="beforeMethod" finished-at="2022-05-24T03:43:42Z" duration-ms="1323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManageProductList()[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:43:42Z" name="verifyTheMoreInfoIsClickableOrNotInManageProductList" finished-at="2022-05-24T03:43:43Z" duration-ms="1045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManageProductList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:43:43Z" name="afterMethod" finished-at="2022-05-24T03:43:43Z" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManageProductList status=SUCCESS method=ExecuteManageProductPage.verifyTheMoreInfoIsClickableOrNotInManageProductList()[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:43:59Z" name="beforeMethod" finished-at="2022-05-24T03:44:00Z" duration-ms="1327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:44:00Z" name="isNewButtonEnable" finished-at="2022-05-24T03:44:01Z" duration-ms="910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:44:01Z" name="afterMethod" finished-at="2022-05-24T03:44:01Z" duration-ms="158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteManageProductPage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:44:48Z" name="beforeMethod" finished-at="2022-05-24T03:44:50Z" duration-ms="1359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:44:50Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:51Z" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:44:51Z" name="afterMethod" finished-at="2022-05-24T03:44:51Z" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteManageProductPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:07Z" name="beforeMethod" finished-at="2022-05-24T03:45:08Z" duration-ms="1407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSearchProduct()[pri:3, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:08Z" name="verifyTheSearchProduct" finished-at="2022-05-24T03:45:10Z" duration-ms="1632" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [apple] but found [apple P789 Combo]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [apple] but found [apple P789 Combo]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.ExecuteManageProductPage.verifyTheSearchProduct(ExecuteManageProductPage.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:10Z" name="afterMethod" finished-at="2022-05-24T03:45:10Z" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSearchProduct status=FAILURE method=ExecuteManageProductPage.verifyTheSearchProduct()[pri:3, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:18Z" name="beforeMethod" finished-at="2022-05-24T03:45:20Z" duration-ms="1479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isEditButtonInProduct()[pri:4, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:20Z" name="isEditButtonInProduct" finished-at="2022-05-24T03:45:21Z" duration-ms="883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEditButtonInProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:21Z" name="afterMethod" finished-at="2022-05-24T03:45:21Z" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isEditButtonInProduct status=SUCCESS method=ExecuteManageProductPage.isEditButtonInProduct()[pri:4, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:24Z" name="beforeMethod" finished-at="2022-05-24T03:45:25Z" duration-ms="1577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyTheManageProductToHomePage()[pri:5, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:25Z" name="VerifyTheManageProductToHomePage" finished-at="2022-05-24T03:45:26Z" duration-ms="1111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTheManageProductToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1649b0e6]" started-at="2022-05-24T03:45:26Z" name="afterMethod" finished-at="2022-05-24T03:45:26Z" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTheManageProductToHomePage status=SUCCESS method=ExecuteManageProductPage.VerifyTheManageProductToHomePage()[pri:5, instance:executeClass.ExecuteManageProductPage@1649b0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageProductPage -->
      <class name="executeClass.ExecuteLoginPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:28Z" name="beforeMethod" finished-at="2022-05-24T03:43:30Z" duration-ms="2370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThecheckBox()[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:30Z" name="verifyThecheckBox" finished-at="2022-05-24T03:43:30Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThecheckBox -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:30Z" name="afterMethod" finished-at="2022-05-24T03:43:31Z" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThecheckBox status=SUCCESS method=ExecuteLoginPage.verifyThecheckBox()[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:45Z" name="beforeMethod" finished-at="2022-05-24T03:43:47Z" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSuccessfulLogin()[pri:1, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:47Z" name="verifyTheSuccessfulLogin" finished-at="2022-05-24T03:43:48Z" duration-ms="1461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:43:48Z" name="afterMethod" finished-at="2022-05-24T03:43:48Z" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyTheSuccessfulLogin()[pri:1, instance:executeClass.ExecuteLoginPage@5fa07e12] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:04Z" name="beforeMethod" finished-at="2022-05-24T03:44:05Z" duration-ms="1479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:05Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:16Z" duration-ms="10477" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d590bbde8f052eab5504749f258493df, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51809}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51809/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d590bbde8f052eab5504749f258493df]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d590bbde8f052eab5504749f258493df, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51809}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51809/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d590bbde8f052eab5504749f258493df
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:16Z" name="afterMethod" finished-at="2022-05-24T03:44:16Z" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:16Z" name="beforeMethod" finished-at="2022-05-24T03:44:17Z" duration-ms="1398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:17Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:28Z" duration-ms="10511" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a9a8db68f4040c799dcedabd3bf48c22, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51902}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51902/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a9a8db68f4040c799dcedabd3bf48c22]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a9a8db68f4040c799dcedabd3bf48c22, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51902}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51902/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a9a8db68f4040c799dcedabd3bf48c22
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:28Z" name="afterMethod" finished-at="2022-05-24T03:44:28Z" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:28Z" name="beforeMethod" finished-at="2022-05-24T03:44:30Z" duration-ms="1378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:30Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:40Z" duration-ms="10533" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2ca1bd6df880ea69f85174f5c9a25082, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51992}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51992/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2ca1bd6df880ea69f85174f5c9a25082]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2ca1bd6df880ea69f85174f5c9a25082, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\nidhi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51992}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51992/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2ca1bd6df880ea69f85174f5c9a25082
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@5fa07e12]" started-at="2022-05-24T03:44:40Z" name="afterMethod" finished-at="2022-05-24T03:44:41Z" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@5fa07e12] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteLoginPage -->
      <class name="executeClass.ExecuteDashboardPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:31Z" name="beforeMethod" finished-at="2022-05-24T03:43:32Z" duration-ms="1426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isDashboardPageDisplayed()[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:32Z" name="isDashboardPageDisplayed" finished-at="2022-05-24T03:43:33Z" duration-ms="651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDashboardPageDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:33Z" name="afterMethod" finished-at="2022-05-24T03:43:33Z" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isDashboardPageDisplayed status=SUCCESS method=ExecuteDashboardPage.isDashboardPageDisplayed()[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:48Z" name="beforeMethod" finished-at="2022-05-24T03:43:50Z" duration-ms="1464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheLogut()[pri:1, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:50Z" name="verifyTheLogut" finished-at="2022-05-24T03:43:51Z" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLogut -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashboardPage@55b53d44]" started-at="2022-05-24T03:43:51Z" name="afterMethod" finished-at="2022-05-24T03:43:51Z" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLogut status=SUCCESS method=ExecuteDashboardPage.verifyTheLogut()[pri:1, instance:executeClass.ExecuteDashboardPage@55b53d44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteDashboardPage -->
      <class name="executeClass.ExecuteAdminUserPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:35Z" name="beforeMethod" finished-at="2022-05-24T03:43:37Z" duration-ms="1371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonDisplayed()[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:37Z" name="isNewButtonDisplayed" finished-at="2022-05-24T03:43:38Z" duration-ms="854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:38Z" name="afterMethod" finished-at="2022-05-24T03:43:38Z" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonDisplayed status=SUCCESS method=ExecuteAdminUserPage.isNewButtonDisplayed()[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:53Z" name="beforeMethod" finished-at="2022-05-24T03:43:54Z" duration-ms="1325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddTheNewAdminUser()[pri:1, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:54Z" name="verifyAddTheNewAdminUser" finished-at="2022-05-24T03:43:56Z" duration-ms="1637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddTheNewAdminUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:43:56Z" name="afterMethod" finished-at="2022-05-24T03:43:56Z" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddTheNewAdminUser status=SUCCESS method=ExecuteAdminUserPage.verifyAddTheNewAdminUser()[pri:1, instance:executeClass.ExecuteAdminUserPage@366647c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:44:43Z" name="beforeMethod" finished-at="2022-05-24T03:44:45Z" duration-ms="1363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:44:45Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:46Z" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:44:46Z" name="afterMethod" finished-at="2022-05-24T03:44:46Z" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteAdminUserPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteAdminUserPage@366647c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:45:02Z" name="beforeMethod" finished-at="2022-05-24T03:45:03Z" duration-ms="1387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isActiveButtonEnable()[pri:3, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:45:03Z" name="isActiveButtonEnable" finished-at="2022-05-24T03:45:04Z" duration-ms="1242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isActiveButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@366647c2]" started-at="2022-05-24T03:45:04Z" name="afterMethod" finished-at="2022-05-24T03:45:04Z" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isActiveButtonEnable status=SUCCESS method=ExecuteAdminUserPage.isActiveButtonEnable()[pri:3, instance:executeClass.ExecuteAdminUserPage@366647c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteAdminUserPage -->
      <class name="executeClass.ExecuteManageOfferCodePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:43:43Z" name="beforeMethod" finished-at="2022-05-24T03:43:44Z" duration-ms="1340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManageOfferCode()[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:43:44Z" name="verifyTheMoreInfoIsClickableOrNotInManageOfferCode" finished-at="2022-05-24T03:43:45Z" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManageOfferCode -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:43:45Z" name="afterMethod" finished-at="2022-05-24T03:43:45Z" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManageOfferCode status=SUCCESS method=ExecuteManageOfferCodePage.verifyTheMoreInfoIsClickableOrNotInManageOfferCode()[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:01Z" name="beforeMethod" finished-at="2022-05-24T03:44:03Z" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:03Z" name="isNewButtonEnable" finished-at="2022-05-24T03:44:04Z" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:04Z" name="afterMethod" finished-at="2022-05-24T03:44:04Z" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteManageOfferCodePage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageOfferCodePage@865dd6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:51Z" name="beforeMethod" finished-at="2022-05-24T03:44:52Z" duration-ms="1314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:52Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:53Z" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:44:53Z" name="afterMethod" finished-at="2022-05-24T03:44:53Z" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteManageOfferCodePage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageOfferCodePage@865dd6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:45:10Z" name="beforeMethod" finished-at="2022-05-24T03:45:12Z" duration-ms="1383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyTheManageProductToHomePage()[pri:3, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:45:12Z" name="VerifyTheManageProductToHomePage" finished-at="2022-05-24T03:45:13Z" duration-ms="1079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTheManageProductToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@865dd6]" started-at="2022-05-24T03:45:13Z" name="afterMethod" finished-at="2022-05-24T03:45:13Z" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTheManageProductToHomePage status=SUCCESS method=ExecuteManageOfferCodePage.VerifyTheManageProductToHomePage()[pri:3, instance:executeClass.ExecuteManageOfferCodePage@865dd6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageOfferCodePage -->
      <class name="executeClass.ExecuteMangePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:33Z" name="beforeMethod" finished-at="2022-05-24T03:43:34Z" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManagePageList()[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:34Z" name="verifyTheMoreInfoIsClickableOrNotInManagePageList" finished-at="2022-05-24T03:43:35Z" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManagePageList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:35Z" name="afterMethod" finished-at="2022-05-24T03:43:35Z" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManagePageList status=SUCCESS method=ExecuteMangePage.verifyTheMoreInfoIsClickableOrNotInManagePageList()[pri:0, instance:executeClass.ExecuteMangePage@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:51Z" name="beforeMethod" finished-at="2022-05-24T03:43:52Z" duration-ms="1458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonDisplayed()[pri:1, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:52Z" name="isNewButtonDisplayed" finished-at="2022-05-24T03:43:53Z" duration-ms="910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:43:53Z" name="afterMethod" finished-at="2022-05-24T03:43:53Z" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonDisplayed status=SUCCESS method=ExecuteMangePage.isNewButtonDisplayed()[pri:1, instance:executeClass.ExecuteMangePage@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:44:41Z" name="beforeMethod" finished-at="2022-05-24T03:44:42Z" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchFunctionalityWorkingFineOrNot()[pri:2, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:44:42Z" name="isSearchFunctionalityWorkingFineOrNot" finished-at="2022-05-24T03:44:43Z" duration-ms="1050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchFunctionalityWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:44:43Z" name="afterMethod" finished-at="2022-05-24T03:44:43Z" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchFunctionalityWorkingFineOrNot status=SUCCESS method=ExecuteMangePage.isSearchFunctionalityWorkingFineOrNot()[pri:2, instance:executeClass.ExecuteMangePage@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:44:53Z" name="beforeMethod" finished-at="2022-05-24T03:44:55Z" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isafterUpdateAlertMessage()[pri:3, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:44:55Z" name="isafterUpdateAlertMessage" finished-at="2022-05-24T03:45:02Z" duration-ms="6862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isafterUpdateAlertMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:45:02Z" name="afterMethod" finished-at="2022-05-24T03:45:02Z" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isafterUpdateAlertMessage status=SUCCESS method=ExecuteMangePage.isafterUpdateAlertMessage()[pri:3, instance:executeClass.ExecuteMangePage@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:45:13Z" name="beforeMethod" finished-at="2022-05-24T03:45:14Z" duration-ms="1312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMangePageToHomePage()[pri:4, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:45:14Z" name="verifyTheMangePageToHomePage" finished-at="2022-05-24T03:45:16Z" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMangePageToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@482bce4f]" started-at="2022-05-24T03:45:16Z" name="afterMethod" finished-at="2022-05-24T03:45:16Z" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMangePageToHomePage status=SUCCESS method=ExecuteMangePage.verifyTheMangePageToHomePage()[pri:4, instance:executeClass.ExecuteMangePage@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteMangePage -->
      <class name="executeClass.ExecuteCategoryPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:38Z" name="beforeMethod" finished-at="2022-05-24T03:43:39Z" duration-ms="1443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInCategoryPageList()[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:39Z" name="verifyTheMoreInfoIsClickableOrNotInCategoryPageList" finished-at="2022-05-24T03:43:40Z" duration-ms="995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInCategoryPageList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:40Z" name="afterMethod" finished-at="2022-05-24T03:43:40Z" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInCategoryPageList status=SUCCESS method=ExecuteCategoryPage.verifyTheMoreInfoIsClickableOrNotInCategoryPageList()[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:56Z" name="beforeMethod" finished-at="2022-05-24T03:43:58Z" duration-ms="1390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:58Z" name="isNewButtonEnable" finished-at="2022-05-24T03:43:59Z" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:43:59Z" name="afterMethod" finished-at="2022-05-24T03:43:59Z" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteCategoryPage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:44:46Z" name="beforeMethod" finished-at="2022-05-24T03:44:47Z" duration-ms="1282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:44:47Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:48Z" duration-ms="1024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:44:48Z" name="afterMethod" finished-at="2022-05-24T03:44:48Z" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteCategoryPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:04Z" name="beforeMethod" finished-at="2022-05-24T03:45:06Z" duration-ms="1308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchFunctionalityWorkingFineOrNot()[pri:3, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:06Z" name="isSearchFunctionalityWorkingFineOrNot" finished-at="2022-05-24T03:45:07Z" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchFunctionalityWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:07Z" name="afterMethod" finished-at="2022-05-24T03:45:07Z" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchFunctionalityWorkingFineOrNot status=SUCCESS method=ExecuteCategoryPage.isSearchFunctionalityWorkingFineOrNot()[pri:3, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:16Z" name="beforeMethod" finished-at="2022-05-24T03:45:17Z" duration-ms="1297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchValueActiveEnable()[pri:4, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:17Z" name="isSearchValueActiveEnable" finished-at="2022-05-24T03:45:18Z" duration-ms="923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchValueActiveEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:18Z" name="afterMethod" finished-at="2022-05-24T03:45:18Z" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchValueActiveEnable status=SUCCESS method=ExecuteCategoryPage.isSearchValueActiveEnable()[pri:4, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:21Z" name="beforeMethod" finished-at="2022-05-24T03:45:22Z" duration-ms="1454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCategoryToHomePage()[pri:5, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:22Z" name="verifyTheCategoryToHomePage" finished-at="2022-05-24T03:45:23Z" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCategoryToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@6a6afff2]" started-at="2022-05-24T03:45:23Z" name="afterMethod" finished-at="2022-05-24T03:45:24Z" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCategoryToHomePage status=SUCCESS method=ExecuteCategoryPage.verifyTheCategoryToHomePage()[pri:5, instance:executeClass.ExecuteCategoryPage@6a6afff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteCategoryPage -->
    </test> <!-- Chrome Browser Test -->
    <test started-at="2022-05-24T03:43:28Z" name="Edge Browser Test" finished-at="2022-05-24T03:45:29Z" duration-ms="121419">
      <class name="executeClass.ExecuteManageProductPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:43:41Z" name="beforeMethod" finished-at="2022-05-24T03:43:43Z" duration-ms="1379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManageProductList()[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:43:43Z" name="verifyTheMoreInfoIsClickableOrNotInManageProductList" finished-at="2022-05-24T03:43:44Z" duration-ms="974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManageProductList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:43:44Z" name="afterMethod" finished-at="2022-05-24T03:43:44Z" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManageProductList status=SUCCESS method=ExecuteManageProductPage.verifyTheMoreInfoIsClickableOrNotInManageProductList()[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:00Z" name="beforeMethod" finished-at="2022-05-24T03:44:01Z" duration-ms="1427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:01Z" name="isNewButtonEnable" finished-at="2022-05-24T03:44:02Z" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:02Z" name="afterMethod" finished-at="2022-05-24T03:44:03Z" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteManageProductPage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:50Z" name="beforeMethod" finished-at="2022-05-24T03:44:52Z" duration-ms="1459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:52Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:52Z" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:44:52Z" name="afterMethod" finished-at="2022-05-24T03:44:53Z" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteManageProductPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:09Z" name="beforeMethod" finished-at="2022-05-24T03:45:11Z" duration-ms="1473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSearchProduct()[pri:3, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:11Z" name="verifyTheSearchProduct" finished-at="2022-05-24T03:45:12Z" duration-ms="1525" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [apple] but found [apple P789 Combo]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [apple] but found [apple P789 Combo]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.ExecuteManageProductPage.verifyTheSearchProduct(ExecuteManageProductPage.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:12Z" name="afterMethod" finished-at="2022-05-24T03:45:12Z" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSearchProduct status=FAILURE method=ExecuteManageProductPage.verifyTheSearchProduct()[pri:3, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:21Z" name="beforeMethod" finished-at="2022-05-24T03:45:22Z" duration-ms="1653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isEditButtonInProduct()[pri:4, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:22Z" name="isEditButtonInProduct" finished-at="2022-05-24T03:45:23Z" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEditButtonInProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:23Z" name="afterMethod" finished-at="2022-05-24T03:45:23Z" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isEditButtonInProduct status=SUCCESS method=ExecuteManageProductPage.isEditButtonInProduct()[pri:4, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:26Z" name="beforeMethod" finished-at="2022-05-24T03:45:28Z" duration-ms="1421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyTheManageProductToHomePage()[pri:5, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:28Z" name="VerifyTheManageProductToHomePage" finished-at="2022-05-24T03:45:29Z" duration-ms="1146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTheManageProductToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@41e1e210]" started-at="2022-05-24T03:45:29Z" name="afterMethod" finished-at="2022-05-24T03:45:29Z" duration-ms="186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTheManageProductToHomePage status=SUCCESS method=ExecuteManageProductPage.VerifyTheManageProductToHomePage()[pri:5, instance:executeClass.ExecuteManageProductPage@41e1e210] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageProductPage -->
      <class name="executeClass.ExecuteLoginPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:28Z" name="beforeMethod" finished-at="2022-05-24T03:43:30Z" duration-ms="2398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThecheckBox()[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:30Z" name="verifyThecheckBox" finished-at="2022-05-24T03:43:30Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThecheckBox -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:30Z" name="afterMethod" finished-at="2022-05-24T03:43:31Z" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThecheckBox status=SUCCESS method=ExecuteLoginPage.verifyThecheckBox()[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:46Z" name="beforeMethod" finished-at="2022-05-24T03:43:48Z" duration-ms="1405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheSuccessfulLogin()[pri:1, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:48Z" name="verifyTheSuccessfulLogin" finished-at="2022-05-24T03:43:48Z" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheSuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:43:48Z" name="afterMethod" finished-at="2022-05-24T03:43:49Z" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheSuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyTheSuccessfulLogin()[pri:1, instance:executeClass.ExecuteLoginPage@4e7912d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:05Z" name="beforeMethod" finished-at="2022-05-24T03:44:07Z" duration-ms="1411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:07Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:17Z" duration-ms="10402" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [9e5afc0d7d5ef37e5e5b00ec6971aa12, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:51844}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51844/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9e5afc0d7d5ef37e5e5b00ec6971aa12]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [9e5afc0d7d5ef37e5e5b00ec6971aa12, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:51844}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51844/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9e5afc0d7d5ef37e5e5b00ec6971aa12
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:17Z" name="afterMethod" finished-at="2022-05-24T03:44:17Z" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:17Z" name="beforeMethod" finished-at="2022-05-24T03:44:19Z" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:19Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:29Z" duration-ms="10384" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [8973ee7e01d067fd52318102fa0a6f99, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:51933}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51933/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8973ee7e01d067fd52318102fa0a6f99]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [8973ee7e01d067fd52318102fa0a6f99, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:51933}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51933/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8973ee7e01d067fd52318102fa0a6f99
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:29Z" name="afterMethod" finished-at="2022-05-24T03:44:30Z" duration-ms="404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:30Z" name="beforeMethod" finished-at="2022-05-24T03:44:31Z" duration-ms="1450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:31Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-24T03:44:42Z" duration-ms="10420" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [8758f3e6e393dc9bc4c0a6a8cedd96d3, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:52021}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52021/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8758f3e6e393dc9bc4c0a6a8cedd96d3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='nav-link'])[2]"}
  (Session info: MicrosoftEdge=101.0.1210.53)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'LAPTOP-KI9HM9P0', ip: '192.168.0.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [8758f3e6e393dc9bc4c0a6a8cedd96d3, findElement {using=xpath, value=(//a[@class='nav-link'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.53, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:52021}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\nidhi\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52021/devtoo..., se:cdpVersion: 101.0.1210.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8758f3e6e393dc9bc4c0a6a8cedd96d3
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
at utilities.GeneralUtilities.getValues(GeneralUtilities.java:17)
at elementRepository.LoginPage.userPage(LoginPage.java:53)
at executeClass.ExecuteLoginPage.verifyUnsuccessfulLogin(ExecuteLoginPage.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@4e7912d8]" started-at="2022-05-24T03:44:42Z" name="afterMethod" finished-at="2022-05-24T03:44:42Z" duration-ms="419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:2, instance:executeClass.ExecuteLoginPage@4e7912d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteLoginPage -->
      <class name="executeClass.ExecuteDashboardPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:31Z" name="beforeMethod" finished-at="2022-05-24T03:43:32Z" duration-ms="1552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isDashboardPageDisplayed()[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:32Z" name="isDashboardPageDisplayed" finished-at="2022-05-24T03:43:33Z" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDashboardPageDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:33Z" name="afterMethod" finished-at="2022-05-24T03:43:33Z" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isDashboardPageDisplayed status=SUCCESS method=ExecuteDashboardPage.isDashboardPageDisplayed()[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:49Z" name="beforeMethod" finished-at="2022-05-24T03:43:50Z" duration-ms="1469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheLogut()[pri:1, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:50Z" name="verifyTheLogut" finished-at="2022-05-24T03:43:51Z" duration-ms="967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLogut -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashboardPage@53976f5c]" started-at="2022-05-24T03:43:51Z" name="afterMethod" finished-at="2022-05-24T03:43:51Z" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLogut status=SUCCESS method=ExecuteDashboardPage.verifyTheLogut()[pri:1, instance:executeClass.ExecuteDashboardPage@53976f5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteDashboardPage -->
      <class name="executeClass.ExecuteAdminUserPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:36Z" name="beforeMethod" finished-at="2022-05-24T03:43:37Z" duration-ms="1436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonDisplayed()[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:37Z" name="isNewButtonDisplayed" finished-at="2022-05-24T03:43:38Z" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:38Z" name="afterMethod" finished-at="2022-05-24T03:43:39Z" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonDisplayed status=SUCCESS method=ExecuteAdminUserPage.isNewButtonDisplayed()[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:54Z" name="beforeMethod" finished-at="2022-05-24T03:43:56Z" duration-ms="1425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddTheNewAdminUser()[pri:1, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:56Z" name="verifyAddTheNewAdminUser" finished-at="2022-05-24T03:43:57Z" duration-ms="1603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddTheNewAdminUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:43:57Z" name="afterMethod" finished-at="2022-05-24T03:43:57Z" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddTheNewAdminUser status=SUCCESS method=ExecuteAdminUserPage.verifyAddTheNewAdminUser()[pri:1, instance:executeClass.ExecuteAdminUserPage@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:44:45Z" name="beforeMethod" finished-at="2022-05-24T03:44:46Z" duration-ms="1539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:44:46Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:47Z" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:44:47Z" name="afterMethod" finished-at="2022-05-24T03:44:47Z" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteAdminUserPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteAdminUserPage@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:45:04Z" name="beforeMethod" finished-at="2022-05-24T03:45:05Z" duration-ms="1583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isActiveButtonEnable()[pri:3, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:45:05Z" name="isActiveButtonEnable" finished-at="2022-05-24T03:45:06Z" duration-ms="917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isActiveButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteAdminUserPage@2f8dad04]" started-at="2022-05-24T03:45:06Z" name="afterMethod" finished-at="2022-05-24T03:45:06Z" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isActiveButtonEnable status=SUCCESS method=ExecuteAdminUserPage.isActiveButtonEnable()[pri:3, instance:executeClass.ExecuteAdminUserPage@2f8dad04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteAdminUserPage -->
      <class name="executeClass.ExecuteManageOfferCodePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:43:44Z" name="beforeMethod" finished-at="2022-05-24T03:43:45Z" duration-ms="1416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManageOfferCode()[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:43:45Z" name="verifyTheMoreInfoIsClickableOrNotInManageOfferCode" finished-at="2022-05-24T03:43:46Z" duration-ms="868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManageOfferCode -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:43:46Z" name="afterMethod" finished-at="2022-05-24T03:43:46Z" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManageOfferCode status=SUCCESS method=ExecuteManageOfferCodePage.verifyTheMoreInfoIsClickableOrNotInManageOfferCode()[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:03Z" name="beforeMethod" finished-at="2022-05-24T03:44:04Z" duration-ms="1536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:04Z" name="isNewButtonEnable" finished-at="2022-05-24T03:44:05Z" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:05Z" name="afterMethod" finished-at="2022-05-24T03:44:05Z" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteManageOfferCodePage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteManageOfferCodePage@be35cd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:53Z" name="beforeMethod" finished-at="2022-05-24T03:44:54Z" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:54Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:55Z" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:44:55Z" name="afterMethod" finished-at="2022-05-24T03:44:55Z" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteManageOfferCodePage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteManageOfferCodePage@be35cd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:45:12Z" name="beforeMethod" finished-at="2022-05-24T03:45:14Z" duration-ms="1477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyTheManageProductToHomePage()[pri:3, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:45:14Z" name="VerifyTheManageProductToHomePage" finished-at="2022-05-24T03:45:15Z" duration-ms="1062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTheManageProductToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOfferCodePage@be35cd9]" started-at="2022-05-24T03:45:15Z" name="afterMethod" finished-at="2022-05-24T03:45:15Z" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTheManageProductToHomePage status=SUCCESS method=ExecuteManageOfferCodePage.VerifyTheManageProductToHomePage()[pri:3, instance:executeClass.ExecuteManageOfferCodePage@be35cd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageOfferCodePage -->
      <class name="executeClass.ExecuteMangePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:33Z" name="beforeMethod" finished-at="2022-05-24T03:43:35Z" duration-ms="1653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInManagePageList()[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:35Z" name="verifyTheMoreInfoIsClickableOrNotInManagePageList" finished-at="2022-05-24T03:43:35Z" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInManagePageList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:35Z" name="afterMethod" finished-at="2022-05-24T03:43:36Z" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInManagePageList status=SUCCESS method=ExecuteMangePage.verifyTheMoreInfoIsClickableOrNotInManagePageList()[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:51Z" name="beforeMethod" finished-at="2022-05-24T03:43:53Z" duration-ms="1453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonDisplayed()[pri:1, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:53Z" name="isNewButtonDisplayed" finished-at="2022-05-24T03:43:54Z" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:43:54Z" name="afterMethod" finished-at="2022-05-24T03:43:54Z" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonDisplayed status=SUCCESS method=ExecuteMangePage.isNewButtonDisplayed()[pri:1, instance:executeClass.ExecuteMangePage@2bfc268b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:44:42Z" name="beforeMethod" finished-at="2022-05-24T03:44:43Z" duration-ms="1448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchFunctionalityWorkingFineOrNot()[pri:2, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:44:43Z" name="isSearchFunctionalityWorkingFineOrNot" finished-at="2022-05-24T03:44:45Z" duration-ms="1153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchFunctionalityWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:44:45Z" name="afterMethod" finished-at="2022-05-24T03:44:45Z" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchFunctionalityWorkingFineOrNot status=SUCCESS method=ExecuteMangePage.isSearchFunctionalityWorkingFineOrNot()[pri:2, instance:executeClass.ExecuteMangePage@2bfc268b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:44:55Z" name="beforeMethod" finished-at="2022-05-24T03:44:57Z" duration-ms="1453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isafterUpdateAlertMessage()[pri:3, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:44:57Z" name="isafterUpdateAlertMessage" finished-at="2022-05-24T03:45:03Z" duration-ms="6696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isafterUpdateAlertMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:45:03Z" name="afterMethod" finished-at="2022-05-24T03:45:04Z" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isafterUpdateAlertMessage status=SUCCESS method=ExecuteMangePage.isafterUpdateAlertMessage()[pri:3, instance:executeClass.ExecuteMangePage@2bfc268b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:45:15Z" name="beforeMethod" finished-at="2022-05-24T03:45:17Z" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMangePageToHomePage()[pri:4, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:45:17Z" name="verifyTheMangePageToHomePage" finished-at="2022-05-24T03:45:18Z" duration-ms="1133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMangePageToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteMangePage@2bfc268b]" started-at="2022-05-24T03:45:18Z" name="afterMethod" finished-at="2022-05-24T03:45:18Z" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMangePageToHomePage status=SUCCESS method=ExecuteMangePage.verifyTheMangePageToHomePage()[pri:4, instance:executeClass.ExecuteMangePage@2bfc268b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteMangePage -->
      <class name="executeClass.ExecuteCategoryPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:43:39Z" name="beforeMethod" finished-at="2022-05-24T03:43:40Z" duration-ms="1440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheMoreInfoIsClickableOrNotInCategoryPageList()[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:43:40Z" name="verifyTheMoreInfoIsClickableOrNotInCategoryPageList" finished-at="2022-05-24T03:43:41Z" duration-ms="1059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMoreInfoIsClickableOrNotInCategoryPageList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:43:41Z" name="afterMethod" finished-at="2022-05-24T03:43:41Z" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMoreInfoIsClickableOrNotInCategoryPageList status=SUCCESS method=ExecuteCategoryPage.verifyTheMoreInfoIsClickableOrNotInCategoryPageList()[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:43:57Z" name="beforeMethod" finished-at="2022-05-24T03:43:59Z" duration-ms="1500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isNewButtonEnable()[pri:1, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:43:59Z" name="isNewButtonEnable" finished-at="2022-05-24T03:44:00Z" duration-ms="941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:44:00Z" name="afterMethod" finished-at="2022-05-24T03:44:00Z" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isNewButtonEnable status=SUCCESS method=ExecuteCategoryPage.isNewButtonEnable()[pri:1, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:44:47Z" name="beforeMethod" finished-at="2022-05-24T03:44:49Z" duration-ms="1541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:44:49Z" name="isSearchButtonEnable" finished-at="2022-05-24T03:44:50Z" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:44:50Z" name="afterMethod" finished-at="2022-05-24T03:44:50Z" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonEnable status=SUCCESS method=ExecuteCategoryPage.isSearchButtonEnable()[pri:2, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:06Z" name="beforeMethod" finished-at="2022-05-24T03:45:08Z" duration-ms="1515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchFunctionalityWorkingFineOrNot()[pri:3, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:08Z" name="isSearchFunctionalityWorkingFineOrNot" finished-at="2022-05-24T03:45:09Z" duration-ms="1113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchFunctionalityWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:09Z" name="afterMethod" finished-at="2022-05-24T03:45:09Z" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchFunctionalityWorkingFineOrNot status=SUCCESS method=ExecuteCategoryPage.isSearchFunctionalityWorkingFineOrNot()[pri:3, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:18Z" name="beforeMethod" finished-at="2022-05-24T03:45:20Z" duration-ms="1607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchValueActiveEnable()[pri:4, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:20Z" name="isSearchValueActiveEnable" finished-at="2022-05-24T03:45:21Z" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchValueActiveEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:21Z" name="afterMethod" finished-at="2022-05-24T03:45:21Z" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchValueActiveEnable status=SUCCESS method=ExecuteCategoryPage.isSearchValueActiveEnable()[pri:4, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:23Z" name="beforeMethod" finished-at="2022-05-24T03:45:25Z" duration-ms="1560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCategoryToHomePage()[pri:5, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:25Z" name="verifyTheCategoryToHomePage" finished-at="2022-05-24T03:45:26Z" duration-ms="1193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCategoryToHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteCategoryPage@29e495ff]" started-at="2022-05-24T03:45:26Z" name="afterMethod" finished-at="2022-05-24T03:45:26Z" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCategoryToHomePage status=SUCCESS method=ExecuteCategoryPage.verifyTheCategoryToHomePage()[pri:5, instance:executeClass.ExecuteCategoryPage@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteCategoryPage -->
    </test> <!-- Edge Browser Test -->
  </suite> <!-- Cross Browser Test Suite -->
</testng-results>
